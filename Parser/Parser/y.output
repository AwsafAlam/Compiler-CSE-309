Terminals unused in grammar

   DOUBLE
   CONST_CHAR
   NEWLINE
   PLUS
   MINUS
   SLASH
   ASTERISK
   DO
   SWITCH
   DEFAULT
   BREAK
   CHAR
   CASE
   CONTINUE


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN RPAREN SEMICOLON

    9 func_definition: type_specifier ID LPAREN RPAREN compound_statement
   10                | type_specifier ID LPAREN parameter_list RPAREN compound_statement

   11 parameter_list: parameter_list COMMA type_specifier ID
   12               | parameter_list COMMA type_specifier
   13               | type_specifier ID
   14               | type_specifier

   15 $@1: %empty

   16 compound_statement: LCURL $@1 statements RCURL

   17 $@2: %empty

   18 compound_statement: LCURL $@2 RCURL

   19 var_declaration: type_specifier declaration_list SEMICOLON
   20                | error

   21 type_specifier: INT
   22               | FLOAT
   23               | VOID

   24 declaration_list: declaration_list COMMA ID
   25                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   26                 | ID
   27                 | ID LTHIRD CONST_INT RTHIRD

   28 statements: statement
   29           | statements statement

   30 statement: var_declaration
   31          | expression_statement
   32          | compound_statement
   33          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   34          | IF LPAREN expression RPAREN statement ELSE statement
   35          | IF LPAREN expression RPAREN statement
   36          | WHILE LPAREN expression RPAREN statement
   37          | PRINTLN LPAREN ID RPAREN SEMICOLON
   38          | RETURN expression SEMICOLON

   39 expression_statement: SEMICOLON
   40                     | expression SEMICOLON

   41 variable: ID
   42         | ID LTHIRD expression RTHIRD

   43 expression: logic_expression
   44           | variable ASSIGNOP logic_expression

   45 logic_expression: rel_expression
   46                 | rel_expression LOGICOP rel_expression

   47 rel_expression: simple_expression
   48               | simple_expression RELOP simple_expression

   49 simple_expression: term
   50                  | simple_expression ADDOP term

   51 term: unary_expression
   52     | term MULOP unary_expression

   53 unary_expression: ADDOP unary_expression
   54                 | NOT unary_expression
   55                 | factor

   56 factor: variable
   57       | ID LPAREN argument_list RPAREN
   58       | LPAREN expression RPAREN
   59       | CONST_INT
   60       | CONST_FLOAT
   61       | variable INCOP
   62       | variable DECOP

   63 argument_list: arguments
   64              | %empty

   65 arguments: arguments COMMA logic_expression
   66          | logic_expression


Terminals, with rules where they appear

$end (0) 0
error (256) 20
LOWER_THAN_ELSE (258)
ELSE (259) 34
DOUBLE (260)
CONST_FLOAT (261) 60
ADDOP (262) 50 53
MULOP (263) 52
ID (264) 7 8 9 10 11 13 24 25 26 27 37 41 42 57
LOGICOP (265) 46
RELOP (266) 48
CONST_CHAR (267)
CONST_INT (268) 25 27 59
NEWLINE (269)
PLUS (270)
MINUS (271)
SLASH (272)
ASTERISK (273)
LPAREN (274) 7 8 9 10 33 34 35 36 37 57 58
RPAREN (275) 7 8 9 10 33 34 35 36 37 57 58
IF (276) 34 35
FOR (277) 33
DO (278)
INT (279) 21
FLOAT (280) 22
VOID (281) 23
SWITCH (282)
DEFAULT (283)
WHILE (284) 36
BREAK (285)
CHAR (286)
RETURN (287) 38
CASE (288)
CONTINUE (289)
ASSIGNOP (290) 44
COMMA (291) 11 12 24 25 65
INCOP (292) 61
DECOP (293) 62
LCURL (294) 16 18
RCURL (295) 16 18
LTHIRD (296) 25 27 42
RTHIRD (297) 25 27 42
NOT (298) 54
PRINTLN (299) 37
SEMICOLON (300) 7 8 19 37 38 39 40


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
start (47)
    on left: 1, on right: 0
program (48)
    on left: 2 3, on right: 1 2
unit (49)
    on left: 4 5 6, on right: 2 3
func_declaration (50)
    on left: 7 8, on right: 5
func_definition (51)
    on left: 9 10, on right: 6
parameter_list (52)
    on left: 11 12 13 14, on right: 7 10 11 12
compound_statement (53)
    on left: 16 18, on right: 9 10 32
$@1 (54)
    on left: 15, on right: 16
$@2 (55)
    on left: 17, on right: 18
var_declaration (56)
    on left: 19 20, on right: 4 30
type_specifier (57)
    on left: 21 22 23, on right: 7 8 9 10 11 12 13 14 19
declaration_list (58)
    on left: 24 25 26 27, on right: 19 24 25
statements (59)
    on left: 28 29, on right: 16 29
statement (60)
    on left: 30 31 32 33 34 35 36 37 38, on right: 28 29 33 34 35 36
expression_statement (61)
    on left: 39 40, on right: 31 33
variable (62)
    on left: 41 42, on right: 44 56 61 62
expression (63)
    on left: 43 44, on right: 33 34 35 36 38 40 42 58
logic_expression (64)
    on left: 45 46, on right: 43 44 65 66
rel_expression (65)
    on left: 47 48, on right: 45 46
simple_expression (66)
    on left: 49 50, on right: 47 48 50
term (67)
    on left: 51 52, on right: 49 50 52
unary_expression (68)
    on left: 53 54 55, on right: 51 52 53 54
factor (69)
    on left: 56 57 58 59 60 61 62, on right: 55
argument_list (70)
    on left: 63 64, on right: 57
arguments (71)
    on left: 65 66, on right: 63 65


State 0

    0 $accept: . start $end

    error  shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4

    start             go to state 5
    program           go to state 6
    unit              go to state 7
    func_declaration  go to state 8
    func_definition   go to state 9
    var_declaration   go to state 10
    type_specifier    go to state 11


State 1

   20 var_declaration: error .

    $default  reduce using rule 20 (var_declaration)


State 2

   21 type_specifier: INT .

    $default  reduce using rule 21 (type_specifier)


State 3

   22 type_specifier: FLOAT .

    $default  reduce using rule 22 (type_specifier)


State 4

   23 type_specifier: VOID .

    $default  reduce using rule 23 (type_specifier)


State 5

    0 $accept: start . $end

    $end  shift, and go to state 12


State 6

    1 start: program .
    2 program: program . unit

    error  shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4

    $end  reduce using rule 1 (start)

    unit              go to state 13
    func_declaration  go to state 8
    func_definition   go to state 9
    var_declaration   go to state 10
    type_specifier    go to state 11


State 7

    3 program: unit .

    $default  reduce using rule 3 (program)


State 8

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 9

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 10

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 11

    7 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . ID LPAREN RPAREN SEMICOLON
    9 func_definition: type_specifier . ID LPAREN RPAREN compound_statement
   10                | type_specifier . ID LPAREN parameter_list RPAREN compound_statement
   19 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 14

    declaration_list  go to state 15


State 12

    0 $accept: start $end .

    $default  accept


State 13

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 14

    7 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID . LPAREN RPAREN SEMICOLON
    9 func_definition: type_specifier ID . LPAREN RPAREN compound_statement
   10                | type_specifier ID . LPAREN parameter_list RPAREN compound_statement
   26 declaration_list: ID .
   27                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 16
    LTHIRD  shift, and go to state 17

    $default  reduce using rule 26 (declaration_list)


State 15

   19 var_declaration: type_specifier declaration_list . SEMICOLON
   24 declaration_list: declaration_list . COMMA ID
   25                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 18
    SEMICOLON  shift, and go to state 19


State 16

    7 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN . RPAREN SEMICOLON
    9 func_definition: type_specifier ID LPAREN . RPAREN compound_statement
   10                | type_specifier ID LPAREN . parameter_list RPAREN compound_statement

    RPAREN  shift, and go to state 20
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4

    parameter_list  go to state 21
    type_specifier  go to state 22


State 17

   27 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 23


State 18

   24 declaration_list: declaration_list COMMA . ID
   25                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 24


State 19

   19 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 19 (var_declaration)


State 20

    8 func_declaration: type_specifier ID LPAREN RPAREN . SEMICOLON
    9 func_definition: type_specifier ID LPAREN RPAREN . compound_statement

    LCURL      shift, and go to state 25
    SEMICOLON  shift, and go to state 26

    compound_statement  go to state 27


State 21

    7 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
   10 func_definition: type_specifier ID LPAREN parameter_list . RPAREN compound_statement
   11 parameter_list: parameter_list . COMMA type_specifier ID
   12               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 28
    COMMA   shift, and go to state 29


State 22

   13 parameter_list: type_specifier . ID
   14               | type_specifier .

    ID  shift, and go to state 30

    $default  reduce using rule 14 (parameter_list)


State 23

   27 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 31


State 24

   24 declaration_list: declaration_list COMMA ID .
   25                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 32

    $default  reduce using rule 24 (declaration_list)


State 25

   16 compound_statement: LCURL . $@1 statements RCURL
   18                   | LCURL . $@2 RCURL

    RCURL     reduce using rule 17 ($@2)
    $default  reduce using rule 15 ($@1)

    $@1  go to state 33
    $@2  go to state 34


State 26

    8 func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


State 27

    9 func_definition: type_specifier ID LPAREN RPAREN compound_statement .

    $default  reduce using rule 9 (func_definition)


State 28

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN . compound_statement

    LCURL      shift, and go to state 25
    SEMICOLON  shift, and go to state 35

    compound_statement  go to state 36


State 29

   11 parameter_list: parameter_list COMMA . type_specifier ID
   12               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4

    type_specifier  go to state 37


State 30

   13 parameter_list: type_specifier ID .

    $default  reduce using rule 13 (parameter_list)


State 31

   27 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 27 (declaration_list)


State 32

   25 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 38


State 33

   16 compound_statement: LCURL $@1 . statements RCURL

    error        shift, and go to state 1
    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    IF           shift, and go to state 44
    FOR          shift, and go to state 45
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    WHILE        shift, and go to state 46
    RETURN       shift, and go to state 47
    LCURL        shift, and go to state 25
    NOT          shift, and go to state 48
    PRINTLN      shift, and go to state 49
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statements            go to state 54
    statement             go to state 55
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 34

   18 compound_statement: LCURL $@2 . RCURL

    RCURL  shift, and go to state 65


State 35

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 36

   10 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement .

    $default  reduce using rule 10 (func_definition)


State 37

   11 parameter_list: parameter_list COMMA type_specifier . ID
   12               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 66

    $default  reduce using rule 12 (parameter_list)


State 38

   25 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 67


State 39

   60 factor: CONST_FLOAT .

    $default  reduce using rule 60 (factor)


State 40

   53 unary_expression: ADDOP . unary_expression

    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 48

    variable          go to state 68
    unary_expression  go to state 69
    factor            go to state 64


State 41

   41 variable: ID .
   42         | ID . LTHIRD expression RTHIRD
   57 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 70
    LTHIRD  shift, and go to state 71

    $default  reduce using rule 41 (variable)


State 42

   59 factor: CONST_INT .

    $default  reduce using rule 59 (factor)


State 43

   58 factor: LPAREN . expression RPAREN

    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 48

    variable           go to state 57
    expression         go to state 72
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 44

   34 statement: IF . LPAREN expression RPAREN statement ELSE statement
   35          | IF . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 73


State 45

   33 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 74


State 46

   36 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 75


State 47

   38 statement: RETURN . expression SEMICOLON

    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 48

    variable           go to state 57
    expression         go to state 76
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 48

   54 unary_expression: NOT . unary_expression

    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 48

    variable          go to state 68
    unary_expression  go to state 77
    factor            go to state 64


State 49

   37 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 78


State 50

   39 expression_statement: SEMICOLON .

    $default  reduce using rule 39 (expression_statement)


State 51

   32 statement: compound_statement .

    $default  reduce using rule 32 (statement)


State 52

   30 statement: var_declaration .

    $default  reduce using rule 30 (statement)


State 53

   19 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 79

    declaration_list  go to state 15


State 54

   16 compound_statement: LCURL $@1 statements . RCURL
   29 statements: statements . statement

    error        shift, and go to state 1
    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    IF           shift, and go to state 44
    FOR          shift, and go to state 45
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    WHILE        shift, and go to state 46
    RETURN       shift, and go to state 47
    LCURL        shift, and go to state 25
    RCURL        shift, and go to state 80
    NOT          shift, and go to state 48
    PRINTLN      shift, and go to state 49
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statement             go to state 81
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 55

   28 statements: statement .

    $default  reduce using rule 28 (statements)


State 56

   31 statement: expression_statement .

    $default  reduce using rule 31 (statement)


State 57

   44 expression: variable . ASSIGNOP logic_expression
   56 factor: variable .
   61       | variable . INCOP
   62       | variable . DECOP

    ASSIGNOP  shift, and go to state 82
    INCOP     shift, and go to state 83
    DECOP     shift, and go to state 84

    $default  reduce using rule 56 (factor)


State 58

   40 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 85


State 59

   43 expression: logic_expression .

    $default  reduce using rule 43 (expression)


State 60

   45 logic_expression: rel_expression .
   46                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 86

    $default  reduce using rule 45 (logic_expression)


State 61

   47 rel_expression: simple_expression .
   48               | simple_expression . RELOP simple_expression
   50 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 87
    RELOP  shift, and go to state 88

    $default  reduce using rule 47 (rel_expression)


State 62

   49 simple_expression: term .
   52 term: term . MULOP unary_expression

    MULOP  shift, and go to state 89

    $default  reduce using rule 49 (simple_expression)


State 63

   51 term: unary_expression .

    $default  reduce using rule 51 (term)


State 64

   55 unary_expression: factor .

    $default  reduce using rule 55 (unary_expression)


State 65

   18 compound_statement: LCURL $@2 RCURL .

    $default  reduce using rule 18 (compound_statement)


State 66

   11 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 11 (parameter_list)


State 67

   25 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 25 (declaration_list)


State 68

   56 factor: variable .
   61       | variable . INCOP
   62       | variable . DECOP

    INCOP  shift, and go to state 83
    DECOP  shift, and go to state 84

    $default  reduce using rule 56 (factor)


State 69

   53 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 53 (unary_expression)


State 70

   57 factor: ID LPAREN . argument_list RPAREN

    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 48

    $default  reduce using rule 64 (argument_list)

    variable           go to state 68
    logic_expression   go to state 90
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    argument_list      go to state 91
    arguments          go to state 92


State 71

   42 variable: ID LTHIRD . expression RTHIRD

    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 48

    variable           go to state 57
    expression         go to state 93
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 72

   58 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 94


State 73

   34 statement: IF LPAREN . expression RPAREN statement ELSE statement
   35          | IF LPAREN . expression RPAREN statement

    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 48

    variable           go to state 57
    expression         go to state 95
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 74

   33 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 48
    SEMICOLON    shift, and go to state 50

    expression_statement  go to state 96
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 75

   36 statement: WHILE LPAREN . expression RPAREN statement

    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 48

    variable           go to state 57
    expression         go to state 97
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 76

   38 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 98


State 77

   54 unary_expression: NOT unary_expression .

    $default  reduce using rule 54 (unary_expression)


State 78

   37 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 99


State 79

   26 declaration_list: ID .
   27                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 17

    $default  reduce using rule 26 (declaration_list)


State 80

   16 compound_statement: LCURL $@1 statements RCURL .

    $default  reduce using rule 16 (compound_statement)


State 81

   29 statements: statements statement .

    $default  reduce using rule 29 (statements)


State 82

   44 expression: variable ASSIGNOP . logic_expression

    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 48

    variable           go to state 68
    logic_expression   go to state 100
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 83

   61 factor: variable INCOP .

    $default  reduce using rule 61 (factor)


State 84

   62 factor: variable DECOP .

    $default  reduce using rule 62 (factor)


State 85

   40 expression_statement: expression SEMICOLON .

    $default  reduce using rule 40 (expression_statement)


State 86

   46 logic_expression: rel_expression LOGICOP . rel_expression

    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 48

    variable           go to state 68
    rel_expression     go to state 101
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 87

   50 simple_expression: simple_expression ADDOP . term

    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 48

    variable          go to state 68
    term              go to state 102
    unary_expression  go to state 63
    factor            go to state 64


State 88

   48 rel_expression: simple_expression RELOP . simple_expression

    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 48

    variable           go to state 68
    simple_expression  go to state 103
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 89

   52 term: term MULOP . unary_expression

    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 48

    variable          go to state 68
    unary_expression  go to state 104
    factor            go to state 64


State 90

   66 arguments: logic_expression .

    $default  reduce using rule 66 (arguments)


State 91

   57 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 105


State 92

   63 argument_list: arguments .
   65 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 106

    $default  reduce using rule 63 (argument_list)


State 93

   42 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 107


State 94

   58 factor: LPAREN expression RPAREN .

    $default  reduce using rule 58 (factor)


State 95

   34 statement: IF LPAREN expression . RPAREN statement ELSE statement
   35          | IF LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 108


State 96

   33 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 48
    SEMICOLON    shift, and go to state 50

    expression_statement  go to state 109
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 97

   36 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 110


State 98

   38 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 38 (statement)


State 99

   37 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 111


State 100

   44 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 44 (expression)


State 101

   46 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 46 (logic_expression)


State 102

   50 simple_expression: simple_expression ADDOP term .
   52 term: term . MULOP unary_expression

    MULOP  shift, and go to state 89

    $default  reduce using rule 50 (simple_expression)


State 103

   48 rel_expression: simple_expression RELOP simple_expression .
   50 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 87

    $default  reduce using rule 48 (rel_expression)


State 104

   52 term: term MULOP unary_expression .

    $default  reduce using rule 52 (term)


State 105

   57 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 57 (factor)


State 106

   65 arguments: arguments COMMA . logic_expression

    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 48

    variable           go to state 68
    logic_expression   go to state 112
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 107

   42 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 42 (variable)


State 108

   34 statement: IF LPAREN expression RPAREN . statement ELSE statement
   35          | IF LPAREN expression RPAREN . statement

    error        shift, and go to state 1
    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    IF           shift, and go to state 44
    FOR          shift, and go to state 45
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    WHILE        shift, and go to state 46
    RETURN       shift, and go to state 47
    LCURL        shift, and go to state 25
    NOT          shift, and go to state 48
    PRINTLN      shift, and go to state 49
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statement             go to state 113
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 109

   33 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    NOT          shift, and go to state 48

    variable           go to state 57
    expression         go to state 114
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 110

   36 statement: WHILE LPAREN expression RPAREN . statement

    error        shift, and go to state 1
    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    IF           shift, and go to state 44
    FOR          shift, and go to state 45
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    WHILE        shift, and go to state 46
    RETURN       shift, and go to state 47
    LCURL        shift, and go to state 25
    NOT          shift, and go to state 48
    PRINTLN      shift, and go to state 49
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statement             go to state 115
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 111

   37 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 116


State 112

   65 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 65 (arguments)


State 113

   34 statement: IF LPAREN expression RPAREN statement . ELSE statement
   35          | IF LPAREN expression RPAREN statement .

    ELSE  shift, and go to state 117

    $default  reduce using rule 35 (statement)


State 114

   33 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 118


State 115

   36 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 36 (statement)


State 116

   37 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 37 (statement)


State 117

   34 statement: IF LPAREN expression RPAREN statement ELSE . statement

    error        shift, and go to state 1
    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    IF           shift, and go to state 44
    FOR          shift, and go to state 45
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    WHILE        shift, and go to state 46
    RETURN       shift, and go to state 47
    LCURL        shift, and go to state 25
    NOT          shift, and go to state 48
    PRINTLN      shift, and go to state 49
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statement             go to state 119
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 118

   33 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    error        shift, and go to state 1
    CONST_FLOAT  shift, and go to state 39
    ADDOP        shift, and go to state 40
    ID           shift, and go to state 41
    CONST_INT    shift, and go to state 42
    LPAREN       shift, and go to state 43
    IF           shift, and go to state 44
    FOR          shift, and go to state 45
    INT          shift, and go to state 2
    FLOAT        shift, and go to state 3
    VOID         shift, and go to state 4
    WHILE        shift, and go to state 46
    RETURN       shift, and go to state 47
    LCURL        shift, and go to state 25
    NOT          shift, and go to state 48
    PRINTLN      shift, and go to state 49
    SEMICOLON    shift, and go to state 50

    compound_statement    go to state 51
    var_declaration       go to state 52
    type_specifier        go to state 53
    statement             go to state 120
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 119

   34 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 34 (statement)


State 120

   33 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 33 (statement)
