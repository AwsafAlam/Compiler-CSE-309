At line no: 2 type_specifier:INT

int  

At line no: 2 declaration_list : ID

x

  New ScopeTable with id 1 created

At line no: 2 declaration_list : declaration_list COMMA ID

x,y

At line no: 2 declaration_list : declaration_list COMMA ID

x,y,z

At line no: 2 var_declaration : type_specifier declaration_list SEMICOLON

int x,y,z;


At line no: 2 unit : var_declaration

int x,y,z;


At line no: 2 program : | unit

int x,y,z;


At line no: 2 type_specifier : FLOAT

float  

At line no: 2 declaration_list : ID

a

At line no: 2 var_declaration : type_specifier declaration_list SEMICOLON

float a;


At line no: 2 unit : var_declaration

float a;


At line no: 2 program : program unit

int x,y,z;

float a;
 

At line no: 4 type_specifier : VOID

void  

At line no: 4 func_declaration :type_specifier ID LPAREN RPAREN SEMICOLON

void foo(); 

At line no: 4 unit : func_declaration

void foo(); 

At line no: 4 program : program unit

int x,y,z;

float a;

void foo(); 

At line no: 6 type_specifier:INT

int  

At line no: 6 type_specifier:INT

int  

At line no: 6 parameter_list : type_specifier ID

int a 

At line no: 6 type_specifier:INT

int  

At line no: 6 parameter_list  : parameter_list COMMA type_specifier ID

int a,int b 

  New ScopeTable with id 2 created

At line no: 7 type_specifier:INT

int  

At line no: 7 declaration_list : ID

l

At line no: 7 declaration_list : declaration_list COMMA ID

l,c

At line no: 7 var_declaration : type_specifier declaration_list SEMICOLON

int l,c;


At line no: 7 statement : var_declaration

int l,c;
 

At line no: 7 statements : statement 

int l,c;
 

At line no: 8 variable : ID

a

At line no: 8 factor	: variable

a 

At line no: 8 unary_expression : factor

a 

At line no: 8 term :	unary_expression

a 

At line no: 8 simple_expression : term

a 

At line no: 8 variable : ID

b

At line no: 8 factor	: variable

b 

At line no: 8 unary_expression : factor

b 

At line no: 8 term :	unary_expression

b 

At line no: 8 simple_expression : simple_expression ADDOP term

a+b 

At line no: 8 rel_expression	: simple_expression

a+b 

At line no: 8 logic_expression : rel_expression

a+b 

At line no: 8 expression : logic_expression

a+b 

At line no: 8 statement : RETURN expression SEMICOLON

return a+b;
 

At line no: 8 statements :| statements statement 

int l,c;
return a+b;
 

At line no: 9 compound_statement : LCURL statements RCURL

{
int l,c;
return a+b;

} 

ScopeTable # 2
----------------------
14 -->  <a : int > 
15 -->  <b : int > 
16 -->  <c : ID> 
25 -->  <l : ID> 

ScopeTable # 1
----------------------
1 -->  <foo : ID> 
7 -->  <x : ID> 
8 -->  <y : ID> 
9 -->  <z : ID> 
14 -->  <a : ID> 
15 -->  <b : ID> 

ScopeTable with id 2 removed

At line no: 9 func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement

int var(int a,int b){
int l,c;
return a+b;

} 

At line no: 9 unit : func_definition

int var(int a,int b){
int l,c;
return a+b;

} 

At line no: 9 program : program unit

int x,y,z;

float a;

void foo();
int var(int a,int b){
int l,c;
return a+b;

} 

At line no: 11 type_specifier : VOID

void  

  New ScopeTable with id 3 created

At line no: 12 variable : ID

x

At line no: 12 factor : CONST_INT

2 

At line no: 12 unary_expression : factor

2 

At line no: 12 term :	unary_expression

2 

At line no: 12 simple_expression : term

2 

At line no: 12 rel_expression	: simple_expression

2 

At line no: 12 logic_expression : rel_expression

2 

At line no: 12 expression : variable ASSIGNOP logic_expression

x=2 

At line no: 12 expression_statement 	: expression SEMICOLON

x=2;
 

At line no: 12 statement : expression_statement

x=2;
 

At line no: 12 statements : statement 

x=2;
 

At line no: 13 variable : ID

y

At line no: 13 variable : ID

x

At line no: 13 factor	: variable

x 

At line no: 13 unary_expression : factor

x 

At line no: 13 term :	unary_expression

x 

At line no: 13 simple_expression : term

x 

At line no: 13 factor : CONST_INT

5 

At line no: 13 unary_expression : factor

5 

At line no: 13 term :	unary_expression

5 

At line no: 13 simple_expression : simple_expression ADDOP term

x-5 

At line no: 13 rel_expression	: simple_expression

x-5 

At line no: 13 logic_expression : rel_expression

x-5 

At line no: 13 expression : variable ASSIGNOP logic_expression

y=x-5 

At line no: 13 expression_statement 	: expression SEMICOLON

y=x-5;
 

At line no: 13 statement : expression_statement

y=x-5;
 

At line no: 13 statements :| statements statement 

x=2;
y=x-5;
 

At line no: 14 compound_statement : LCURL statements RCURL

{
x=2;
y=x-5;

} 

ScopeTable # 3
----------------------

ScopeTable # 1
----------------------
1 -->  <foo : ID> 
6 -->  <var : ID> 
7 -->  <x : ID> 
8 -->  <y : ID> 
9 -->  <z : ID> 
14 -->  <a : ID> 
15 -->  <b : ID> 

ScopeTable with id 3 removed

At line no: 14 func_definition : type_specifier ID LPAREN  RPAREN compound_statement

void foo(){
x=2;
y=x-5;

} 

At line no: 14 unit : func_definition

void foo(){
x=2;
y=x-5;

} 

At line no: 14 program : program unit

int x,y,z;

float a;

void foo();
int var(int a,int b){
int l,c;
return a+b;

}
void foo(){
x=2;
y=x-5;

} 

At line no: 16 type_specifier:INT

int  

At line no: 16 type_specifier:INT

int  

At line no: 16 parameter_list : type_specifier ID

int k 

  New ScopeTable with id 4 created

At line no: 17 factor : CONST_INT

9 

At line no: 17 unary_expression : factor

9 

At line no: 17 term :	unary_expression

9 

At line no: 17 simple_expression : term

9 

At line no: 17 rel_expression	: simple_expression

9 

At line no: 17 logic_expression : rel_expression

9 

At line no: 17 arguments : logic_expression

9 

At line no: 17 factor : CONST_INT

7 

At line no: 17 unary_expression : factor

7 

At line no: 17 term :	unary_expression

7 

At line no: 17 simple_expression : term

7 

At line no: 17 rel_expression	: simple_expression

7 

At line no: 17 logic_expression : rel_expression

7 

At line no: 17 arguments : arguments COMMA logic_expression

9,7 

At line no: 17 argument_list : arguments

9,7 

At line no: 17 factor	: ID LPAREN argument_list RPAREN

var(9,7) 

At line no: 17 unary_expression : factor

var(9,7) 

At line no: 17 term :	unary_expression

var(9,7) 

At line no: 17 simple_expression : term

var(9,7) 

At line no: 17 rel_expression	: simple_expression

var(9,7) 

At line no: 17 logic_expression : rel_expression

var(9,7) 

At line no: 17 expression : logic_expression

var(9,7) 

At line no: 17 expression_statement 	: expression SEMICOLON

var(9,7);
 

At line no: 17 statement : expression_statement

var(9,7);
 

At line no: 17 statements : statement 

var(9,7);
 

At line no: 18 type_specifier:INT

int  

At line no: 18 declaration_list : ID LTHIRD CONST_INT RTHIRD

a[2] 

At line no: 18 declaration_list : declaration_list COMMA ID

a[2],c

At line no: 18 declaration_list : declaration_list COMMA ID

a[2],c,i

At line no: 18 declaration_list : declaration_list COMMA ID

a[2],c,i,j

At line no: 18 var_declaration : type_specifier declaration_list SEMICOLON

int a[2],c,i,j;


At line no: 18 statement : var_declaration

int a[2],c,i,j;
 

At line no: 18 statements :| statements statement 

var(9,7);
int a[2],c,i,j;
 

At line no: 19 type_specifier : FLOAT

float  

At line no: 19 declaration_list : ID

d

At line no: 19 var_declaration : type_specifier declaration_list SEMICOLON

float d;


At line no: 19 statement : var_declaration

float d;
 

At line no: 19 statements :| statements statement 

var(9,7);
int a[2],c,i,j;
float d;
 

At line no: 20 factor : CONST_INT

0 

At line no: 20 unary_expression : factor

0 

At line no: 20 term :	unary_expression

0 

At line no: 20 simple_expression : term

0 

At line no: 20 rel_expression	: simple_expression

0 

At line no: 20 logic_expression : rel_expression

0 

At line no: 20 expression : logic_expression

0 

At line no: 20 variable : ID LTHIRD expression RTHIRD

a[0] 

At line no: 20 factor : CONST_INT

1 

At line no: 20 unary_expression : factor

1 

At line no: 20 term :	unary_expression

1 

At line no: 20 simple_expression : term

1 

At line no: 20 rel_expression	: simple_expression

1 

At line no: 20 logic_expression : rel_expression

1 

At line no: 20 expression : variable ASSIGNOP logic_expression

a[0]=1 

At line no: 20 expression_statement 	: expression SEMICOLON

a[0]=1;
 

At line no: 20 statement : expression_statement

a[0]=1;
 

At line no: 20 statements :| statements statement 

var(9,7);
int a[2],c,i,j;
float d;
a[0]=1;
 

At line no: 21 factor : CONST_INT

1 

At line no: 21 unary_expression : factor

1 

At line no: 21 term :	unary_expression

1 

At line no: 21 simple_expression : term

1 

At line no: 21 rel_expression	: simple_expression

1 

At line no: 21 logic_expression : rel_expression

1 

At line no: 21 expression : logic_expression

1 

At line no: 21 variable : ID LTHIRD expression RTHIRD

a[1] 

At line no: 21 factor : CONST_INT

5 

At line no: 21 unary_expression : factor

5 

At line no: 21 term :	unary_expression

5 

At line no: 21 simple_expression : term

5 

At line no: 21 rel_expression	: simple_expression

5 

At line no: 21 logic_expression : rel_expression

5 

At line no: 21 expression : variable ASSIGNOP logic_expression

a[1]=5 

At line no: 21 expression_statement 	: expression SEMICOLON

a[1]=5;
 

At line no: 21 statement : expression_statement

a[1]=5;
 

At line no: 21 statements :| statements statement 

var(9,7);
int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
 

At line no: 22 variable : ID

i

At line no: 22 factor : CONST_INT

0 

At line no: 22 unary_expression : factor

0 

At line no: 22 term :	unary_expression

0 

At line no: 22 simple_expression : term

0 

At line no: 22 rel_expression	: simple_expression

0 

At line no: 22 logic_expression : rel_expression

0 

At line no: 22 expression : logic_expression

0 

At line no: 22 variable : ID LTHIRD expression RTHIRD

a[0] 

At line no: 22 factor	: variable

a[0] 

At line no: 22 unary_expression : factor

a[0] 

At line no: 22 term :	unary_expression

a[0] 

At line no: 22 simple_expression : term

a[0] 

At line no: 22 factor : CONST_INT

1 

At line no: 22 unary_expression : factor

1 

At line no: 22 term :	unary_expression

1 

At line no: 22 simple_expression : term

1 

At line no: 22 rel_expression	: simple_expression

1 

At line no: 22 logic_expression : rel_expression

1 

At line no: 22 expression : logic_expression

1 

At line no: 22 variable : ID LTHIRD expression RTHIRD

a[1] 

At line no: 22 factor	: variable

a[1] 

At line no: 22 unary_expression : factor

a[1] 

At line no: 22 term :	unary_expression

a[1] 

At line no: 22 simple_expression : simple_expression ADDOP term

a[0]+a[1] 

At line no: 22 rel_expression	: simple_expression

a[0]+a[1] 

At line no: 22 logic_expression : rel_expression

a[0]+a[1] 

At line no: 22 expression : variable ASSIGNOP logic_expression

i=a[0]+a[1] 

At line no: 22 expression_statement 	: expression SEMICOLON

i=a[0]+a[1];
 

At line no: 22 statement : expression_statement

i=a[0]+a[1];
 

At line no: 22 statements :| statements statement 

var(9,7);
int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
 

At line no: 23 variable : ID

j

At line no: 23 factor : CONST_INT

2 

At line no: 23 unary_expression : factor

2 

At line no: 23 term :	unary_expression

2 

At line no: 23 factor : CONST_FLOAT

3.4 

At line no: 23 unary_expression : factor

3.4 

At line no: 23 term :	term MULOP unary_expression

2*3.4 

At line no: 23 simple_expression : term

2*3.4 

At line no: 23 factor : CONST_INT

5 

At line no: 23 unary_expression : factor

5 

At line no: 23 term :	unary_expression

5 

At line no: 23 factor : CONST_INT

3 

At line no: 23 unary_expression : factor

3 

At line no: 23 term :	term MULOP unary_expression

5%3 

At line no: 23 simple_expression : term

5%3 

At line no: 23 factor : CONST_INT

4 

At line no: 23 unary_expression : factor

4 

At line no: 23 term :	unary_expression

4 

At line no: 23 simple_expression : term

4 

At line no: 23 rel_expression	: simple_expression RELOP simple_expression

5%3<4 

At line no: 23 factor : CONST_INT

8 

At line no: 23 unary_expression : factor

8 

At line no: 23 term :	unary_expression

8 

At line no: 23 simple_expression : term

8 

At line no: 23 rel_expression	: simple_expression

8 

At line no: 23 logic_expression : rel_expression LOGICOP rel_expression

5%3<4&&8 

At line no: 23 expression : logic_expression

5%3<4&&8 

At line no: 23 factor : LPAREN expression RPAREN

(5%3<4&&8) 

At line no: 23 unary_expression : factor

(5%3<4&&8) 

At line no: 23 term :	unary_expression

(5%3<4&&8) 

At line no: 23 simple_expression : simple_expression ADDOP term

2*3.4+(5%3<4&&8) 

At line no: 23 rel_expression	: simple_expression

2*3.4+(5%3<4&&8) 

At line no: 23 factor : CONST_INT

2 

At line no: 23 unary_expression : factor

2 

At line no: 23 term :	unary_expression

2 

At line no: 23 simple_expression : term

2 

At line no: 23 rel_expression	: simple_expression

2 

At line no: 23 logic_expression : rel_expression LOGICOP rel_expression

2*3.4+(5%3<4&&8)||2 

At line no: 23 expression : variable ASSIGNOP logic_expression

j=2*3.4+(5%3<4&&8)||2 

At line no: 23 expression_statement 	: expression SEMICOLON

j=2*3.4+(5%3<4&&8)||2;
 

At line no: 23 statement : expression_statement

j=2*3.4+(5%3<4&&8)||2;
 

At line no: 23 statements :| statements statement 

var(9,7);
int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
j=2*3.4+(5%3<4&&8)||2;
 

At line no: 24 variable : ID

j

At line no: 24 factor : CONST_FLOAT

2.3 

At line no: 24 unary_expression : factor

2.3 

At line no: 24 term :	unary_expression

2.3 

At line no: 24 factor : CONST_FLOAT

3.4 

At line no: 24 unary_expression : factor

3.4 

At line no: 24 term :	term MULOP unary_expression

2.3*3.4 

At line no: 24 simple_expression : term

2.3*3.4 

At line no: 24 rel_expression	: simple_expression

2.3*3.4 

At line no: 24 logic_expression : rel_expression

2.3*3.4 

At line no: 24 expression : variable ASSIGNOP logic_expression

j=2.3*3.4 

At line no: 24 expression_statement 	: expression SEMICOLON

j=2.3*3.4;
 

At line no: 24 statement : expression_statement

j=2.3*3.4;
 

At line no: 24 statements :| statements statement 

var(9,7);
int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
j=2*3.4+(5%3<4&&8)||2;
j=2.3*3.4;
 

At line no: 25 variable : ID

d

At line no: 25 factor : CONST_INT

1 

At line no: 25 unary_expression : factor

1 

At line no: 25 term :	unary_expression

1 

At line no: 25 simple_expression : term

1 

At line no: 25 rel_expression	: simple_expression

1 

At line no: 25 logic_expression : rel_expression

1 

At line no: 25 arguments : logic_expression

1 

At line no: 25 factor : CONST_INT

2 

At line no: 25 unary_expression : factor

2 

At line no: 25 term :	unary_expression

2 

At line no: 25 factor : CONST_INT

3 

At line no: 25 unary_expression : factor

3 

At line no: 25 term :	term MULOP unary_expression

2*3 

At line no: 25 simple_expression : term

2*3 

At line no: 25 rel_expression	: simple_expression

2*3 

At line no: 25 logic_expression : rel_expression

2*3 

At line no: 25 arguments : arguments COMMA logic_expression

1,2*3 

At line no: 25 argument_list : arguments

1,2*3 

At line no: 25 factor	: ID LPAREN argument_list RPAREN

var(1,2*3) 

At line no: 25 unary_expression : factor

var(1,2*3) 

At line no: 25 term :	unary_expression

var(1,2*3) 

At line no: 25 simple_expression : term

var(1,2*3) 

At line no: 25 factor : CONST_FLOAT

3.5 

At line no: 25 unary_expression : factor

3.5 

At line no: 25 term :	unary_expression

3.5 

At line no: 25 factor : CONST_INT

2 

At line no: 25 unary_expression : factor

2 

At line no: 25 term :	term MULOP unary_expression

3.5*2 

At line no: 25 simple_expression : simple_expression ADDOP term

var(1,2*3)+3.5*2 

At line no: 25 rel_expression	: simple_expression

var(1,2*3)+3.5*2 

At line no: 25 logic_expression : rel_expression

var(1,2*3)+3.5*2 

At line no: 25 expression : variable ASSIGNOP logic_expression

d=var(1,2*3)+3.5*2 

At line no: 25 expression_statement 	: expression SEMICOLON

d=var(1,2*3)+3.5*2;
 

At line no: 25 statement : expression_statement

d=var(1,2*3)+3.5*2;
 

At line no: 25 statements :| statements statement 

var(9,7);
int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
j=2*3.4+(5%3<4&&8)||2;
j=2.3*3.4;
d=var(1,2*3)+3.5*2;
 

At line no: 26 argument_list :

At line no: 26 factor	: ID LPAREN argument_list RPAREN

foo(var) 

At line no: 26 unary_expression : factor

foo(var) 

At line no: 26 term :	unary_expression

foo(var) 

At line no: 26 simple_expression : term

foo(var) 

At line no: 26 rel_expression	: simple_expression

foo(var) 

At line no: 26 logic_expression : rel_expression

foo(var) 

At line no: 26 expression : logic_expression

foo(var) 

At line no: 26 expression_statement 	: expression SEMICOLON

foo(var);
 

At line no: 26 statement : expression_statement

foo(var);
 

At line no: 26 statements :| statements statement 

var(9,7);
int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
j=2*3.4+(5%3<4&&8)||2;
j=2.3*3.4;
d=var(1,2*3)+3.5*2;
foo(var);
 

At line no: 27 factor : CONST_INT

0 

At line no: 27 unary_expression : factor

0 

At line no: 27 term :	unary_expression

0 

At line no: 27 simple_expression : term

0 

At line no: 27 rel_expression	: simple_expression

0 

At line no: 27 logic_expression : rel_expression

0 

At line no: 27 expression : logic_expression

0 

At line no: 27 statement : RETURN expression SEMICOLON

return 0;
 

At line no: 27 statements :| statements statement 

var(9,7);
int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
j=2*3.4+(5%3<4&&8)||2;
j=2.3*3.4;
d=var(1,2*3)+3.5*2;
foo(var);
return 0;
 

At line no: 28 compound_statement : LCURL statements RCURL

{
var(9,7);
int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
j=2*3.4+(5%3<4&&8)||2;
j=2.3*3.4;
d=var(1,2*3)+3.5*2;
foo(var);
return 0;

} 

ScopeTable # 4
----------------------
14 -->  <a : ID> 
16 -->  <c : ID> 
17 -->  <d : ID> 
22 -->  <i : ID> 
23 -->  <j : ID> 
24 -->  <k : int > 

ScopeTable # 1
----------------------
1 -->  <foo : ID> 
6 -->  <var : ID> 
7 -->  <x : ID> 
8 -->  <y : ID> 
9 -->  <z : ID> 
14 -->  <a : ID> 
15 -->  <b : ID> 
24 -->  <k : ID> 

ScopeTable with id 4 removed

At line no: 28 func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement

int main(int k){
var(9,7);
int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
j=2*3.4+(5%3<4&&8)||2;
j=2.3*3.4;
d=var(1,2*3)+3.5*2;
foo(var);
return 0;

} 

At line no: 28 unit : func_definition

int main(int k){
var(9,7);
int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
j=2*3.4+(5%3<4&&8)||2;
j=2.3*3.4;
d=var(1,2*3)+3.5*2;
foo(var);
return 0;

} 

At line no: 28 program : program unit

int x,y,z;

float a;

void foo();
int var(int a,int b){
int l,c;
return a+b;

}
void foo(){
x=2;
y=x-5;

}
int main(int k){
var(9,7);
int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
j=2*3.4+(5%3<4&&8)||2;
j=2.3*3.4;
d=var(1,2*3)+3.5*2;
foo(var);
return 0;

} 

At line no: 29 start : program

int x,y,z;

float a;

void foo();
int var(int a,int b){
int l,c;
return a+b;

}
void foo(){
x=2;
y=x-5;

}
int main(int k){
var(9,7);
int a[2],c,i,j;
float d;
a[0]=1;
a[1]=5;
i=a[0]+a[1];
j=2*3.4+(5%3<4&&8)||2;
j=2.3*3.4;
d=var(1,2*3)+3.5*2;
foo(var);
return 0;

}

