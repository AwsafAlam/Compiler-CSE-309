Terminals unused in grammar

   IF
   ELSE
   FOR
   DO
   FLOAT
   VOID
   SWITCH
   DEFAULT
   WHILE
   BREAK
   CHAR
   DOUBLE
   RETURN
   CASE
   CONTINUE
   ADDOP
   ASSIGNOP
   COMMA
   CONST_FLOAT
   CONST_INT
   INCOP
   DECOP
   ID
   LCURL
   RCURL
   LOGICOP
   LTHIRD
   RTHIRD
   MULOP
   NOT
   PRINTLN
   RELOP
   SEMICOLON
   BITOP
   CONST_CHAR


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | input line
    3      | INT

    4 line: NEWLINE
    5     | expr NEWLINE

    6 expr: expr PLUS term
    7     | expr MINUS term
    8     | term

    9 term: term ASTERISK factor
   10     | term SLASH factor
   11     | factor

   12 factor: LPAREN expr RPAREN
   13       | NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
NEWLINE (258) 4 5
NUMBER (259) 13
PLUS (260) 6
MINUS (261) 7
SLASH (262) 10
ASTERISK (263) 9
LPAREN (264) 12
RPAREN (265) 12
IF (266)
ELSE (267)
FOR (268)
DO (269)
INT (270) 3
FLOAT (271)
VOID (272)
SWITCH (273)
DEFAULT (274)
WHILE (275)
BREAK (276)
CHAR (277)
DOUBLE (278)
RETURN (279)
CASE (280)
CONTINUE (281)
ADDOP (282)
ASSIGNOP (283)
COMMA (284)
CONST_FLOAT (285)
CONST_INT (286)
INCOP (287)
DECOP (288)
ID (289)
LCURL (290)
RCURL (291)
LOGICOP (292)
LTHIRD (293)
RTHIRD (294)
MULOP (295)
NOT (296)
PRINTLN (297)
RELOP (298)
SEMICOLON (299)
BITOP (300)
CONST_CHAR (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
input (48)
    on left: 1 2 3, on right: 0 2
line (49)
    on left: 4 5, on right: 2
expr (50)
    on left: 6 7 8, on right: 5 6 7 12
term (51)
    on left: 9 10 11, on right: 6 7 8 9 10
factor (52)
    on left: 12 13, on right: 9 10 11


State 0

    0 $accept: . input $end

    INT  shift, and go to state 1

    $default  reduce using rule 1 (input)

    input  go to state 2


State 1

    3 input: INT .

    $default  reduce using rule 3 (input)


State 2

    0 $accept: input . $end
    2 input: input . line

    $end     shift, and go to state 3
    NEWLINE  shift, and go to state 4
    NUMBER   shift, and go to state 5
    LPAREN   shift, and go to state 6

    line    go to state 7
    expr    go to state 8
    term    go to state 9
    factor  go to state 10


State 3

    0 $accept: input $end .

    $default  accept


State 4

    4 line: NEWLINE .

    $default  reduce using rule 4 (line)


State 5

   13 factor: NUMBER .

    $default  reduce using rule 13 (factor)


State 6

   12 factor: LPAREN . expr RPAREN

    NUMBER  shift, and go to state 5
    LPAREN  shift, and go to state 6

    expr    go to state 11
    term    go to state 9
    factor  go to state 10


State 7

    2 input: input line .

    $default  reduce using rule 2 (input)


State 8

    5 line: expr . NEWLINE
    6 expr: expr . PLUS term
    7     | expr . MINUS term

    NEWLINE  shift, and go to state 12
    PLUS     shift, and go to state 13
    MINUS    shift, and go to state 14


State 9

    8 expr: term .
    9 term: term . ASTERISK factor
   10     | term . SLASH factor

    SLASH     shift, and go to state 15
    ASTERISK  shift, and go to state 16

    $default  reduce using rule 8 (expr)


State 10

   11 term: factor .

    $default  reduce using rule 11 (term)


State 11

    6 expr: expr . PLUS term
    7     | expr . MINUS term
   12 factor: LPAREN expr . RPAREN

    PLUS    shift, and go to state 13
    MINUS   shift, and go to state 14
    RPAREN  shift, and go to state 17


State 12

    5 line: expr NEWLINE .

    $default  reduce using rule 5 (line)


State 13

    6 expr: expr PLUS . term

    NUMBER  shift, and go to state 5
    LPAREN  shift, and go to state 6

    term    go to state 18
    factor  go to state 10


State 14

    7 expr: expr MINUS . term

    NUMBER  shift, and go to state 5
    LPAREN  shift, and go to state 6

    term    go to state 19
    factor  go to state 10


State 15

   10 term: term SLASH . factor

    NUMBER  shift, and go to state 5
    LPAREN  shift, and go to state 6

    factor  go to state 20


State 16

    9 term: term ASTERISK . factor

    NUMBER  shift, and go to state 5
    LPAREN  shift, and go to state 6

    factor  go to state 21


State 17

   12 factor: LPAREN expr RPAREN .

    $default  reduce using rule 12 (factor)


State 18

    6 expr: expr PLUS term .
    9 term: term . ASTERISK factor
   10     | term . SLASH factor

    SLASH     shift, and go to state 15
    ASTERISK  shift, and go to state 16

    $default  reduce using rule 6 (expr)


State 19

    7 expr: expr MINUS term .
    9 term: term . ASTERISK factor
   10     | term . SLASH factor

    SLASH     shift, and go to state 15
    ASTERISK  shift, and go to state 16

    $default  reduce using rule 7 (expr)


State 20

   10 term: term SLASH factor .

    $default  reduce using rule 10 (term)


State 21

    9 term: term ASTERISK factor .

    $default  reduce using rule 9 (term)
