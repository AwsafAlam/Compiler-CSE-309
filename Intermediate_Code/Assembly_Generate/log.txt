  New ScopeTable with id 1 created

At line no: 1 type_specifier:INT

int  

  New ScopeTable with id 2 created

At line no: 2 type_specifier:INT

int  

At line no: 2 declaration_list : ID

a

At line no: 2 declaration_list : declaration_list COMMA ID

a,b

At line no: 2 declaration_list : declaration_list COMMA ID LTHIRD CONST_INT RTHIRD

a,b,c[3]

At line no: 2 var_declaration : type_specifier declaration_list SEMICOLON

int a,b,c[3];


At line no: 2 statement : var_declaration

int a,b,c[3];
 

At line no: 2 statements : statement 

int a,b,c[3];
 

At line no: 3 variable : ID

a

At line no: 3 factor : CONST_INT

1 

At line no: 3 unary_expression : factor

1 

At line no: 3 term :	unary_expression

1 

At line no: 3 factor : CONST_INT

2 

At line no: 3 unary_expression : factor

2 

At line no: 3 term :	unary_expression

2 

At line no: 3 simple_expression : term

2 

At line no: 3 factor : CONST_INT

3 

At line no: 3 unary_expression : factor

3 

At line no: 3 term :	unary_expression

3 

At line no: 3 simple_expression : simple_expression ADDOP term

2+3 

At line no: 3 rel_expression	: simple_expression

2+3 

At line no: 3 logic_expression : rel_expression

2+3 

At line no: 3 expression : logic_expression

2+3 

At line no: 3 factor : LPAREN expression RPAREN

(2+3) 

At line no: 3 unary_expression : factor

(2+3) 

At line no: 3 term :	term MULOP unary_expression

1*(2+3) 

At line no: 3 factor : CONST_INT

3 

At line no: 3 unary_expression : factor

3 

At line no: 3 term :	term MULOP unary_expression

1*(2+3)%3 

At line no: 3 simple_expression : term

1*(2+3)%3 

At line no: 3 rel_expression	: simple_expression

1*(2+3)%3 

At line no: 3 logic_expression : rel_expression

1*(2+3)%3 

At line no: 3 expression : variable ASSIGNOP logic_expression

a=1*(2+3)%3 

At line no: 3 expression_statement 	: expression SEMICOLON

a=1*(2+3)%3;
 

At line no: 3 statement : expression_statement

a=1*(2+3)%3;
 

At line no: 3 statements :| statements statement 

int a,b,c[3];
a=1*(2+3)%3;
 

At line no: 4 variable : ID

b

At line no: 4 factor : CONST_INT

1 

At line no: 4 unary_expression : factor

1 

At line no: 4 term :	unary_expression

1 

At line no: 4 simple_expression : term

1 

At line no: 4 factor : CONST_INT

5 

At line no: 4 unary_expression : factor

5 

At line no: 4 term :	unary_expression

5 

At line no: 4 simple_expression : term

5 

At line no: 4 rel_expression	: simple_expression RELOP simple_expression

1<5 

At line no: 4 logic_expression : rel_expression

1<5 

At line no: 4 expression : variable ASSIGNOP logic_expression

b=1<5 

At line no: 4 expression_statement 	: expression SEMICOLON

b=1<5;
 

At line no: 4 statement : expression_statement

b=1<5;
 

At line no: 4 statements :| statements statement 

int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
 

At line no: 5 factor : CONST_INT

0 

At line no: 5 unary_expression : factor

0 

At line no: 5 term :	unary_expression

0 

At line no: 5 simple_expression : term

0 

At line no: 5 rel_expression	: simple_expression

0 

At line no: 5 logic_expression : rel_expression

0 

At line no: 5 expression : logic_expression

0 

At line no: 5 variable : ID LTHIRD expression RTHIRD

c[0] 

At line no: 5 factor : CONST_INT

2 

At line no: 5 unary_expression : factor

2 

At line no: 5 term :	unary_expression

2 

At line no: 5 simple_expression : term

2 

At line no: 5 rel_expression	: simple_expression

2 

At line no: 5 logic_expression : rel_expression

2 

At line no: 5 expression : variable ASSIGNOP logic_expression

c[0]=2 

At line no: 5 expression_statement 	: expression SEMICOLON

c[0]=2;
 

At line no: 5 statement : expression_statement

c[0]=2;
 

At line no: 5 statements :| statements statement 

int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
 

At line no: 6 variable : ID

a

At line no: 6 factor	: variable

a 

At line no: 6 unary_expression : factor

a 

At line no: 6 term :	unary_expression

a 

At line no: 6 simple_expression : term

a 

At line no: 6 rel_expression	: simple_expression

a 

At line no: 6 variable : ID

b

At line no: 6 factor	: variable

b 

At line no: 6 unary_expression : factor

b 

At line no: 6 term :	unary_expression

b 

At line no: 6 simple_expression : term

b 

At line no: 6 rel_expression	: simple_expression

b 

At line no: 6 logic_expression : rel_expression LOGICOP rel_expression

a&&b 

At line no: 6 expression : logic_expression

a&&b 

At line no: 7 factor : CONST_INT

0 

At line no: 7 unary_expression : factor

0 

At line no: 7 term :	unary_expression

0 

At line no: 7 simple_expression : term

0 

At line no: 7 rel_expression	: simple_expression

0 

At line no: 7 logic_expression : rel_expression

0 

At line no: 7 expression : logic_expression

0 

At line no: 7 variable : ID LTHIRD expression RTHIRD

c[0] 

At line no: 7 factor : variable DECOP

c[0];; 

At line no: 7 unary_expression : factor

c[0];; 

At line no: 7 term :	unary_expression

c[0];; 

At line no: 7 simple_expression : term

c[0];; 

At line no: 7 rel_expression	: simple_expression

c[0];; 

At line no: 7 logic_expression : rel_expression

c[0];; 

At line no: 7 expression : logic_expression

c[0];; 

At line no: 7 expression_statement 	: expression SEMICOLON

c[0];;;
 

At line no: 7 statement : expression_statement

c[0];;;
 

At line no: 9 factor : CONST_INT

1 

At line no: 9 unary_expression : factor

1 

At line no: 9 term :	unary_expression

1 

At line no: 9 simple_expression : term

1 

At line no: 9 rel_expression	: simple_expression

1 

At line no: 9 logic_expression : rel_expression

1 

At line no: 9 expression : logic_expression

1 

At line no: 9 variable : ID LTHIRD expression RTHIRD

c[1] 

At line no: 9 factor : CONST_INT

0 

At line no: 9 unary_expression : factor

0 

At line no: 9 term :	unary_expression

0 

At line no: 9 simple_expression : term

0 

At line no: 9 rel_expression	: simple_expression

0 

At line no: 9 logic_expression : rel_expression

0 

At line no: 9 expression : logic_expression

0 

At line no: 9 variable : ID LTHIRD expression RTHIRD

c[0] 

At line no: 9 factor	: variable

c[0] 

At line no: 9 unary_expression : factor

c[0] 

At line no: 9 term :	unary_expression

c[0] 

At line no: 9 simple_expression : term

c[0] 

At line no: 9 rel_expression	: simple_expression

c[0] 

At line no: 9 logic_expression : rel_expression

c[0] 

At line no: 9 expression : variable ASSIGNOP logic_expression

c[1]=c[0] 

At line no: 9 expression_statement 	: expression SEMICOLON

c[1]=c[0];
 

At line no: 9 statement : expression_statement

c[1]=c[0];
 

At line no: 9 statement : IF LPAREN expression RPAREN statement ELSE statement

if(a&&b)c[0];;;
elsec[1]=c[0];
 

At line no: 9 statements :| statements statement 

int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
if(a&&b)c[0];;;
elsec[1]=c[0];
 

At line no: 10 statement : PRINTLN LPAREN ID RPAREN SEMICOLON

println(a);
 

At line no: 10 statements :| statements statement 

int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
if(a&&b)c[0];;;
elsec[1]=c[0];
println(a);
 

At line no: 11 statement : PRINTLN LPAREN ID RPAREN SEMICOLON

println(b);
 

At line no: 11 statements :| statements statement 

int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
if(a&&b)c[0];;;
elsec[1]=c[0];
println(a);
println(b);
 

At line no: 12 compound_statement : LCURL statements RCURL

{
int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
if(a&&b)c[0];;;
elsec[1]=c[0];
println(a);
println(b);

} 

ScopeTable # 2
----------------------
14 -->  <a : ID> 
15 -->  <b : ID> 
16 -->  <c : ID> 

ScopeTable # 1
----------------------

ScopeTable with id 2 removed

At line no: 12 func_definition : type_specifier ID LPAREN  RPAREN compound_statement

int main(){
int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
if(a&&b)c[0];;;
elsec[1]=c[0];
println(a);
println(b);

} 

At line no: 12 unit : func_definition

int main(){
int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
if(a&&b)c[0];;;
elsec[1]=c[0];
println(a);
println(b);

} 

At line no: 12 program : | unit

int main(){
int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
if(a&&b)c[0];;;
elsec[1]=c[0];
println(a);
println(b);

}

At line no: 13 start : program

int main(){
int a,b,c[3];
a=1*(2+3)%3;
b=1<5;
c[0]=2;
if(a&&b)c[0];;;
elsec[1]=c[0];
println(a);
println(b);

}

